# by Aamnah <hello@aamnah.com> @AamnahAkram
# some functions taken from Nate Landau's .bash_profile 
# http://natelandau.com/my-mac-osx-bash_profile/

#   take:  create a dir and cd to it by taking an argument
#   ---------------------------------------------------------
    take () {
	mkdir $1
	cd $1
    }

#   extract:  Extract most known archives with one command
#   ---------------------------------------------------------
    extract () {
        if [ -f $1 ] ; then
          case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted via extract()" ;;
             esac
         else
             echo "'$1' is not a valid file"
         fi
    }
    
#   ii:  display useful host related informaton
#   (notes: color_codes need to be defined in .bash_profile 
#   and $HOST needs to be defined)
#   -------------------------------------------------------------------

    ii() {
        echo -e "\nYou are logged on ${color_red} $HOST"
        echo -e "\nAdditional information:$color_off " ; uname -a
        echo -e "\n${color_blue}Users logged on:$color_off " ; w -h
        echo -e "\n${color_yellow}Current date :$color_off " ; date
        echo -e "\n${color_pink}Machine stats :$color_off " ; uptime
        echo -e "\n${color_cyan}Current network location :$color_off " ; scselect
        echo -e "\n${color_green}Public facing IP Address :$color_off " ;myip
        #echo -e "\n${color_blue}DNS Configuration:$color_off " ; scutil --dns
        echo
    }


#   authme: Copy public key to remote machine (dependency-less)
#   -------------------------------------------------------------------
    function authme() {
      ssh "$1" 'mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys' \
        < ~/.ssh/id_dsa.pub
    }

#   getwebsite:  wget a whole website
  # Download an entire website
  # -p parameter tells wget to include all files, including images.
  # -e robots=off you don't want wget to obey by the robots.txt file
  # -U mozilla as your browsers identity.
  # --random-wait to let wget chose a random number of seconds to wait, avoid get into black list.
  # Other Useful wget Parameters:
  # --limit-rate=20k limits the rate at which it downloads files.
  # -b continues wget after logging out.
  # -o $HOME/wget_log.txt logs the output
#   ---------------------------------------------------------
    getwebsite () {
      wget --random-wait -r -p -e robots=off -U mozilla $1
    }
